---
- name: Configure hosts files in all nodes
  hosts: all
  become: yes
  become_user: root
  tasks:
  - name: Update hostname
    hostname:
      name: '{{ ansible_host }}'
  - name: Get private network
    block:
    - set_fact:
        private_addr: "{{hostvars[groups['wn'][0]].ansible_default_ipv4.network}}/{{hostvars[groups['wn'][0]].ansible_default_ipv4.netmask}}"
    - set_fact:
        private_network: "{{ private_addr | ipaddr('net')}}"
    when: hostvars[groups['wn'][0]].ansible_default_ipv4.address is defined
  - name: Configure front's public IP in /etc/hosts
    lineinfile:
      dest: /etc/hosts
      regexp: ".*{{ groups['front'][0] }}$"
      line: "{{ hostvars[groups['front'][0]].ansible_default_ipv4.address }} {{ groups['front'][0] }}"
      state: present
    when: hostvars[groups['front'][0]].ansible_default_ipv4.address is defined
  - name: Configure front's private IP in /etc/hosts
    lineinfile:
      dest: /etc/hosts
      regexp: ".*{{ groups['front'][0] }}.localdomain$"
      line: "{{ hostvars[groups['front'][0]]['ansible_%s' | format(item)]['ipv4']['address'] }} {{groups['front'][0]}}.localdomain"
      state: present
    when: private_network | network_in_usable(hostvars[groups['front'][0]]['ansible_%s' | format(item)]['ipv4']['address'])
    with_items: "{{hostvars[groups['front'][0]]['ansible_interfaces']}}"
  - name: Configure WNs' IPs /etc/hosts files
    lineinfile: dest=/etc/hosts regexp='.*{{ item }}$' line="{{ hostvars[item].ansible_default_ipv4.address }} {{item}} {{item}}.localdomain" state=present
    when: hostvars[item].ansible_default_ipv4.address is defined
    with_items: "{{groups['wn']}}"

- name: Configure front
  hosts: front
  become: yes
  become_user: root
  vars:
    kubeconfig_path: '/etc/rancher/k3s/k3s.yaml'
  vars_files: vars.yaml
  pre_tasks:
  - name: Create dir for the NFS PV
    file: path=/pv state=directory mode=755
  - name: Create auth file dir
    file: path=/etc/kubernetes/pki state=directory mode=755 recurse=yes
  - name: Create auth data file with an admin user
    copy: content='{{kube_admin_token}},kubeuser,100,"users,system:masters"' dest=/etc/kubernetes/pki/auth mode=600
  roles:
  - role: grycap.nfs
    nfs_mode: 'front'
    nfs_exports: [{path: "/pv", export: "*.localdomain(fsid=0,rw,async,no_root_squash,no_subtree_check,insecure)"}]
  - role: grycap.kubernetes
    kube_install_method: k3s
    kube_install_ingress: true
    kube_install_nfs_client: true
    kube_deploy_dashboard: true
    kube_nfs_server: '{{ ansible_host }}.localdomain'
    kube_cert_manager: true
    kube_public_dns_name: '{{ dns_host }}'
    kube_apiserver_options:
      - {option: "--service-node-port-range", value: "80-35000"}
      - {option: "--token-auth-file", value: "/etc/kubernetes/pki/auth"}
  - role: 'grycap.kubeminio'
    minio_secretkey: '{{ minio_password }}'
    master_deploy: true
    enable_tls: true
    enable_ingress: true
    public_hostname_api: "{{ minio_dns_host }}"
    public_hostname_console: "{{ minio_dns_host_console }}"
  - role: 'grycap.kubefaas'
    master_deploy: true
    functions_namespace: oscar-svc
  - role: 'grycap.kubeoscar'
    oscar_pass: '{{ oscar_password }}'
    create_ingress: true
    cert_manager_issuer: 'letsencrypt-prod'
    minio_endpoint:  'https://{{ minio_dns_host }}'
    minio_secret_key: '{{ minio_password }}'
    master_deploy: true
    openfaas_scaler_enable: true
    serverless_backend: "openfaas"

- name: Configure WN(s)
  hosts: wn
  become: yes
  become_user: root
  gather_facts: false
  vars:
    kubeconfig_path: '/etc/rancher/k3s/k3s.yaml'
  vars_files: vars.yaml
  pre_tasks:
  - name: Gather facts
    setup:
    delegate_to: '{{ item }}'
    delegate_facts: true
    loop: "{{ groups['all'] }}"
  roles:
  - role: grycap.nfs
    nfs_mode: 'wn'
    nfs_client_imports:
    - {local: "/pv", remote: "/pv", server_host: "{{groups['front'][0]}}.localdomain"}
  - role: grycap.kubernetes
    kube_install_method: k3s
    kube_type_of_node: 'wn'
    kube_server: "{{ hostvars[groups['front'][0]]['ansible_default_ipv4']['address'] }}"
    kube_api_server: "{{ hostvars[groups['front'][0]]['ansible_default_ipv4']['address'] }}"